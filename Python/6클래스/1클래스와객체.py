
# 1. 클래스 class란?
# 우리는 앞서 함수란 하나의 특정 작업을 수행하기 위해 독립적으로 설계된 프로그램 코드라고 배웠다.
# 이처럼 함수 뿐만 아니라 관련된 변수까지 한꺼번에 묶어서 위에서 관리하고 재사용할수 있게 해주는것으로
# 무엇인가를 계속 해서 만들어 낼수 있는 설계 도면(틀)클래스라고 한다.
# 예) 붕어빵 틀(클래스), 과자 틀

# -------------------------------------------------------

# 2. 객체(Object)란?
# 예) 붕어빵 틀(클래스)에서 찍혀 나온 붕어빵 하나하나(객체), 과자틀를 사용해 만든 과자

# --------------------------------------------------------

# 3. 속성 attribute 과 메소드 method란?
# 이때 클래스에 포함된 변수를 속성 attribute이라 부르며,
# 클래스에 포함되는 함수를 메소드 method라고 한다.
# 예) 클래스 - 은행업무
# 속성 - 계좌번호, 소유주, 잔액, 이자율 등등
# 메소드 - 입금하기, 출금하기, 이체하기

# 결론 : 이처럼 우리가 실생활에서 접할 수 있는 무언가를 속성과 메소드로 분리하여 분석해 보는
# 연습을 자주 한다면 이후에 클래스 설계도를 만드는데 훨씬 많은 도움이 될 수 있다.

# -------------------------------------------------------

# 4. 클래스 선언하기
# 파이썬에서는 class키워드를 사용하여 클래스를 선언할 수 있으며,
# 그 내부에서 def키워드를 사용하여 메소드를 선언할 수 있다.
# 속성은 변수를 선언하는 일반적인 방법과 같은 방법으로 선언할 수 있다.

# 예제1. 클래스 선언하기
class Dog:
    # 속성선언(변수선언)
    name = "삼석이"
    age = 3
    breed = "골든 리트리버"
    # 메소드 선언
    def bark(self):
        print(self.name+"가 멍멍짖고 있다")

# 설명 : 위 예제에 작성한 Dog클래스는 name,age,breed라는 3개의 속성
# bark()라는 하나의 메소드로 구성된다.
# barK()메소드 선언시 매개변수로 사용된 self매개변수는 자바의 this키워드와 마찬가지로
# 객체가 자기 자신을 참조하는데 사용하는 매개변수이다.
# 즉, self매개변수를 사용하면 메소드에서 클래스에 정의된 모든 속성 및 다른 메소드에 접근할 수 있다.
# 예를 들어 print() 구문안에 self.name의 self매개변수를 사용하여 클래스의 name속성에 접근하고 있는 것을 확인할 수 있다.
# 중요!! 파이썬에서는 메소드를 선언할때 첫 번째 매개변수로 반드시 self를 명시하도록 하고있다.
# 또한 메소드를 호출할때는 self매개변수에 아무런 인수를 전달하지 않아도 된다.

# -----------------------------------------------------------
# 5.인스턴스 생성하기
# 인스턴스 : 클래스를 기반으로 생성된 객체
# 인스턴스 생성 문법
# 인스턴스명 = 클래스명()
# 설명 : 파이썬에서는 클래스명에 소괄호()를 사용하여 해당 클래스의 인스턴스를 생성할 수 있다.
#        생성된 인스턴스에 .닷 연산자를 사용하면 해당 클래스의 속성이나 메소드를 호출할 수 있다.

# 예제2. Dog인스턴스 생성하기
# 인스턴스명 = 클래스명()
my_dog = Dog() #my_dog라는 이름을 가지는 Dog클래스의 인스턴스를 생성하고 있다.
               #my_dog는 객체이면서 동시에 Dog클래스의 인스턴스가 된다.

# 인스턴스의 속성(변수)에 접근하여 값을 얻어 출력
#my_dog.breed
print(my_dog.breed)

# 생성된 인스턴스를 가지고 해당 클래스의 메소드를 호출할 수 있다.
my_dog.bark()